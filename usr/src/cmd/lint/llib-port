	/*LINTLIBRARY*/
#include <stdio.h>
	exit(s) {;}
char	*mktemp(p) char *p; { return(p);}
int	(*signal(c, f))() int (*f)(); { return(f); }
char	*strcat(a, b) char *a, *b; { return(a); }
int	strcmp(a, b) char *a, *b; { return(1); }
char	*strcpy(a, b) char *a, *b; { return(a); }
int	strcspn(a, b) char *a, *b; { return(1); }
int	strlen(s) char *s; { return(1); }
char	*strchr(a, b) char *a, b; { return(a); }
char	*strncat(a, b, n) char *a, *b; { return(a); }
char	*strrchr(a, b) char *a, b; { return(a); }
int	strncmp(a, b, n) char *a, *b; { return(1); }
char	*strpbrk(a, b) char *a, *b; { return(a); }
char	*strncpy(a, b, n) char *a, *b; { return(a); }
int	strspn(a, b) char *a, *b; { return(1); }
char	*strtok(a, b) char *a, *b; { return(a); }
long	time(t) long *t; {return 0L;}
char	*calloc(n,s) unsigned n, s; { static char c[1]; return(c); }
char	*malloc(n) unsigned n; {static char c; return(&c);}
char	*realloc(p, n) char *p; unsigned n; { static char c; return(&c);}
	free(p) char *p; {;}
	fclose(f) FILE *f; {return(0);}
	fflush(f) FILE *f; {return(0);}
char	*fgets( s, l, f ) char *s; FILE *f; { return(s); }
FILE	*fopen(s,m) char *s, *m; { return(stdin); }
int	fgetc(f) FILE *f; { return(0); }
int	fputc(c, f) FILE *f; { return(c); }
FILE	*freopen(s, m, f) char *s, *m; FILE *f; { return(stdin); }
FILE	*fdopen(fd, m) char *m; { return(stdin);}
	/*VARARGS2*/
int	fprintf( f, s ) FILE *f; char *s; { return(1);}
	fputs(s,f) char *s; FILE *f; {;}
int	fread( p, s, n, f ) char *p; unsigned s; FILE *f; {return(1);}
	/*VARARGS2*/
	fscanf( f, s ) FILE *f; char *s; {return(1);}
int	fwrite( p, s, n, f ) char *p; unsigned s; FILE *f; {return(0);}
	intss(){return(1); }
	/*VARARGS1*/
int	printf( s ) char *s; { return(1); }
	rewind(f) FILE *f; {;}
	/*VARARGS1*/
int	scanf( f ) char *f; {return(1); }
	setbuf( f, b ) FILE *f; char *b; {;}
	/*VARARGS2*/
int	sprintf( s, f ) char *s, *f; { return(1);}
	/*VARARGS2*/
	sscanf( s, f ) char *s, *f; { return(1); }
	ungetc( c, f ) FILE *f; {  return(c); }
	wdleng(){return(0); }
struct	_iobuf _iob[_NFILE];
char	_ctype[];
